{"remainingRequest":"/www/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/web/src/components/scene.vue?vue&type=script&lang=js&","dependencies":[{"path":"/www/web/src/components/scene.vue","mtime":1560668899000},{"path":"/www/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/www/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport rateItem from './rateItem'\n\nexport default {\n  name: 'scene',\n  components: {\n    rateItem\n  },\n  props: {\n    // 当前场次数据\n    dt: {\n      type: Object,\n      default: {\n        long: '',\n        status: 1,\n        time: '',\n        timestamp: 0,\n        price: '',\n        type: 0\n      }\n    },\n    prices: {\n      type: Array,\n      default: () => {\n        return []\n      }\n    },\n    rate: {\n      type: Object,\n      default: () => {\n        return {\n          1: 0,\n          2: 0,\n          3: 0\n        }\n      }\n    },\n    // 数据格式：[{type: 1, price: 5000, count: 1}]\n    values: {\n      type: Array,\n      default: () => {\n        return []\n      }\n    },\n  },\n  data() {\n    return {\n      types: [\n        {\n          id: 1,\n          label: 'BUY'\n        },\n        {\n          id: 2,\n          label: 'SELL'\n        },\n        {\n          id: 3,\n          label: 'CANCEL'\n        }\n      ],\n      amounts: {\n        1: [],\n        2: [],\n        3: []\n      }\n    }\n  },\n  computed: {\n    info() {\n      if (this.dt) {\n        if (this.dt.status === 3) {\n          switch (this.dt.type) {\n            case 1:\n              return 'BUY'\n\n            case 2:\n              return 'SELL'\n\n            case 3:\n              return 'CANCEL'\n\n            default:\n              return this.$t('trade.jxz')\n          }\n        }\n        return this.dt.long\n      }\n      return ''\n    },\n    status() {\n      return this.dt.status\n    },\n    totalAmount() {\n      let amount = {\n        type: 0,\n        price: 0,\n        number: 0\n      };\n      for (let type in this.amounts) {\n        if (this.amounts.hasOwnProperty(type) && this.amounts[type].length > 0) {\n          this.amounts[type].forEach(({price, number}) => {\n            if (number > 0) {\n              amount.type = Number(type)\n            }\n            amount.price += price * number\n            amount.number += number\n          })\n        }\n      }\n      return amount\n    },\n    initAmounts() {\n      let types = [1, 2, 3]\n      let amounts = {\n        1: [],\n        2: [],\n        3: []\n      }\n      let prices = this.prices\n      let values = this.values\n      types.forEach(type => {\n        if (prices.length > 0) {\n          prices.forEach(price => {\n            let number = 0\n            if (values.length > 0) {\n              values.some(value => {\n                if (Number(value.type) === Number(type) && Number(value.price) === Number(price)) {\n                  number = value.count\n                  return true\n                }\n              })\n            }\n            amounts[type].push({price, number})\n          })\n        }\n      })\n      return amounts\n    }\n  },\n  watch: {\n    status(v, old) {\n      // 如果不开放，则恢复初始数据\n      if (old === 1 && v === 2) {\n        this.init()\n      }\n    },\n    initAmounts() {\n      this.init()\n    }\n  },\n  methods: {\n    init() {\n      this.amounts = JSON.parse(JSON.stringify(this.initAmounts))\n    },\n    submit() {\n      let data = {\n        scene_time: this.dt.time,\n        type: 0,\n        list: []\n      }\n\n      for (let type in this.amounts) {\n        if (this.amounts.hasOwnProperty(type) && this.amounts[type].length > 0) {\n          this.amounts[type].forEach(({price, number}) => {\n            if (number > 0) {\n              data.type = type\n              data.list.push({price, count: number})\n            }\n          })\n        }\n      }\n\n      if (data.type === 0 || data.list.length === 0) {\n        this.$message.error(this.$t('trade.buy_error'))\n        return\n      }\n\n      this.$api.post('/trades', data).then(data => {\n        if (data) {\n          this.$emit('trade')\n        }\n      })\n    }\n  },\n  mounted() {\n    this.init()\n  }\n}\n",{"version":3,"sources":["scene.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"scene.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"scene-title\">\n      <span class=\"status\" :class=\"[`st-${status}`, `tp-${dt.type}`]\">{{info}}</span>\n      {{$t('trade.scene')}}: <b>{{dt.time}}</b>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <template v-if=\"dt.price !== ''\">\n        {{$t('trade.price')}}：<b>{{dt.price}}</b>\n      </template>\n    </div>\n    <div class=\"rt\" :class=\"t.label\" v-for=\"t in types\" :key=\"t.id\">\n      <div class=\"bar\">\n        {{t.label}}\n        <small>(×{{rate[t.id]}})</small>\n      </div>\n      <div class=\"jy\">\n        <rate-item :disabled=\"totalAmount.type !== 0 && totalAmount.type !== t.id\" :readonly=\"status !== 1 || values.length > 0\" :isMax=\"totalAmount.number >= 10\" :type=\"t.id\" v-for=\"(a, i) in amounts[t.id]\" :key=\"i\" v-model=\"amounts[t.id][i]\"></rate-item>\n      </div>\n    </div>\n    <div class=\"scene-bot\">\n      <span>{{$t('base.total')}}: <b>{{totalAmount.price|numFormat}}</b></span>\n      <button class=\"can\" v-if=\"status === 1 && values.length === 0\" @click=\"init\" v-t=\"'base.reset'\"></button>\n      <button v-if=\"status === 1 && values.length === 0\" @click=\"submit\" v-t=\"'base.btnYes'\"></button>\n      <span class=\"txt\" v-if=\"status === 2 && values.length === 0\">{{$t('trade.one')}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n      <span class=\"txt\" v-if=\"status !== 3 && values.length > 0\">{{$t('trade.wait')}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n      <span class=\"txt\" v-if=\"status === 3 && dt.type !== 0\">{{$t('trade.result')}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n    </div>\n  </div>\n</template>\n\n<script>\n  import rateItem from './rateItem'\n\n  export default {\n    name: 'scene',\n    components: {\n      rateItem\n    },\n    props: {\n      // 当前场次数据\n      dt: {\n        type: Object,\n        default: {\n          long: '',\n          status: 1,\n          time: '',\n          timestamp: 0,\n          price: '',\n          type: 0\n        }\n      },\n      prices: {\n        type: Array,\n        default: () => {\n          return []\n        }\n      },\n      rate: {\n        type: Object,\n        default: () => {\n          return {\n            1: 0,\n            2: 0,\n            3: 0\n          }\n        }\n      },\n      // 数据格式：[{type: 1, price: 5000, count: 1}]\n      values: {\n        type: Array,\n        default: () => {\n          return []\n        }\n      },\n    },\n    data() {\n      return {\n        types: [\n          {\n            id: 1,\n            label: 'BUY'\n          },\n          {\n            id: 2,\n            label: 'SELL'\n          },\n          {\n            id: 3,\n            label: 'CANCEL'\n          }\n        ],\n        amounts: {\n          1: [],\n          2: [],\n          3: []\n        }\n      }\n    },\n    computed: {\n      info() {\n        if (this.dt) {\n          if (this.dt.status === 3) {\n            switch (this.dt.type) {\n              case 1:\n                return 'BUY'\n\n              case 2:\n                return 'SELL'\n\n              case 3:\n                return 'CANCEL'\n\n              default:\n                return this.$t('trade.jxz')\n            }\n          }\n          return this.dt.long\n        }\n        return ''\n      },\n      status() {\n        return this.dt.status\n      },\n      totalAmount() {\n        let amount = {\n          type: 0,\n          price: 0,\n          number: 0\n        };\n        for (let type in this.amounts) {\n          if (this.amounts.hasOwnProperty(type) && this.amounts[type].length > 0) {\n            this.amounts[type].forEach(({price, number}) => {\n              if (number > 0) {\n                amount.type = Number(type)\n              }\n              amount.price += price * number\n              amount.number += number\n            })\n          }\n        }\n        return amount\n      },\n      initAmounts() {\n        let types = [1, 2, 3]\n        let amounts = {\n          1: [],\n          2: [],\n          3: []\n        }\n        let prices = this.prices\n        let values = this.values\n        types.forEach(type => {\n          if (prices.length > 0) {\n            prices.forEach(price => {\n              let number = 0\n              if (values.length > 0) {\n                values.some(value => {\n                  if (Number(value.type) === Number(type) && Number(value.price) === Number(price)) {\n                    number = value.count\n                    return true\n                  }\n                })\n              }\n              amounts[type].push({price, number})\n            })\n          }\n        })\n        return amounts\n      }\n    },\n    watch: {\n      status(v, old) {\n        // 如果不开放，则恢复初始数据\n        if (old === 1 && v === 2) {\n          this.init()\n        }\n      },\n      initAmounts() {\n        this.init()\n      }\n    },\n    methods: {\n      init() {\n        this.amounts = JSON.parse(JSON.stringify(this.initAmounts))\n      },\n      submit() {\n        let data = {\n          scene_time: this.dt.time,\n          type: 0,\n          list: []\n        }\n\n        for (let type in this.amounts) {\n          if (this.amounts.hasOwnProperty(type) && this.amounts[type].length > 0) {\n            this.amounts[type].forEach(({price, number}) => {\n              if (number > 0) {\n                data.type = type\n                data.list.push({price, count: number})\n              }\n            })\n          }\n        }\n\n        if (data.type === 0 || data.list.length === 0) {\n          this.$message.error(this.$t('trade.buy_error'))\n          return\n        }\n\n        this.$api.post('/trades', data).then(data => {\n          if (data) {\n            this.$emit('trade')\n          }\n        })\n      }\n    },\n    mounted() {\n      this.init()\n    }\n  }\n</script>\n\n<style scoped lang=\"less\">\n  @import \"../assets/config\";\n\n  .scene-title {\n    line-height: 50px;\n    font-size: 16px;\n    padding: 0 20px;\n    border: 1px solid #ccc;\n    border-bottom: none;\n    color: #666;\n\n    b {\n      color: #4A4A4A;\n      font-weight: normal;\n    }\n\n    .status {\n      .tc;\n      .fr;\n      margin-top: (50-26)/2px;\n      box-sizing: border-box;\n      height: 26px;\n      line-height: 24px;\n      border: 1px solid #FF8A1E;\n      color: #FF8A1E;\n      padding: 0 8px;\n\n      &.st-2 {\n        border-color: #ccc;\n        color: #ccc;\n      }\n\n      &.st-3 {\n        border-color: @color_sell;\n        color: @color_sell;\n\n        &.tp-1 {\n          border-color: @color_buy;\n          color: @color_buy;\n        }\n        &.tp-3 {\n          border-color: @color_cancel;\n          color: @color_cancel;\n        }\n      }\n    }\n  }\n\n  .rt {\n    border: 1px solid #ccc;\n    border-bottom: none;\n    overflow: auto;\n    \n    .bar {\n      .fl;\n      .tc;\n      width: 74px;\n      font-weight: bold;\n      line-height: 18px;\n      padding: (80-36)/2px 0;\n\n      small {\n        display: block;\n        font-size: 12px;\n        font-weight: normal;\n      }\n    }\n\n    .jy {\n      .fl;\n      display: flex;\n      width: 586-74px;\n\n      > div {\n        flex: 1;\n      }\n\n      .rate-item {\n        padding: (80-52)/2px 0;\n      }\n    }\n    \n    &.BUY {\n      .bar {\n        background: #FCE2DD;\n        color: #FD4322;\n      }\n    }\n\n    &.SELL {\n      .bar {\n        background: #D9EEFD;\n        color: #2F97E5;\n      }\n    }\n\n    &.CANCEL {\n      .bar {\n        background: #D9F6EE;\n        color: #18B387;\n      }\n    }\n  }\n\n  .scene-bot {\n    line-height: 48px;\n    border: 1px solid #ccc;\n    display: flex;\n\n    > *{\n      flex: 2;\n    }\n\n    span {\n      color: #666;\n      font-size: 14px;\n      text-indent: 20px;\n\n      b{\n        font-size: 20px;\n        color: #20323E;\n      }\n\n      &.txt {\n        font-size: 14px;\n        color: #666;\n        text-align: right;\n      }\n    }\n\n    button {\n      flex: 1;\n      margin: 0;\n      padding: 0;\n      cursor: pointer;\n      background: @color_deep;\n      border: none;\n      font-weight: bold;\n      font-size: 20px;\n      color: #fff;\n\n      &.can {\n        background: #aaa;\n      }\n    }\n  }\n\n  .disscene {\n\n  }\n\n  @media screen and (max-width: 1200px) {\n    .scene-title {\n      font-size: 12px;\n      line-height: 30px;\n      padding: 0 6px;\n      .status {\n        margin-top: (30-16)/2px;\n        height: 16px;\n        line-height: 14px;\n      }\n    }\n\n    .rt {\n\n      &.SELL, &.CANCEL {\n        border-top: none;\n      }\n\n      .bar {\n        width: 50px;\n        font-size: 12px;\n        line-height: 14px;\n        padding: (36-28)/2px 0;\n      }\n\n      .jy {\n        display: flex;\n        float: none;\n        margin-left: 50px;\n        width: auto;\n        .rate-item {\n          padding: 1px 0;\n        }\n      }\n    }\n\n    .scene-bot {\n      line-height: 34px;\n\n      span {\n        font-size: 12px;\n        text-indent: 20px;\n\n        b{\n          font-size: 14px;\n        }\n\n        &.txt {\n          font-size: 12px;\n        }\n      }\n\n      button {\n        flex: 1;\n        font-size: 14px;\n      }\n    }\n  }\n</style>\n"]}]}