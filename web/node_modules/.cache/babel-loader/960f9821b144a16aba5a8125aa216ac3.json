{"remainingRequest":"/www/web/node_modules/thread-loader/dist/cjs.js!/www/web/node_modules/babel-loader/lib/index.js!/www/web/src/ws.js","dependencies":[{"path":"/www/web/src/ws.js","mtime":1560668899000},{"path":"/www/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/web/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _MessageBox2 from \"element-ui/lib/theme-chalk/message-box.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _MessageBox from \"element-ui/lib/message-box\";\nimport _JSON$stringify from \"/www/web/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport _typeof from \"/www/web/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport store from './store';\nimport i18n from './i18n';\nimport router from './router';\nvar ws = {\n  ws: null,\n  needTip: false,\n  host: process.env.VUE_APP_WS_HOST,\n  si: null,\n  retry: 0,\n  init: function init(r) {\n    if (this.ws === null || r) {\n      this.needTip = true;\n      this.ws = new WebSocket(this.host);\n      this.ws.onopen = event.onOpen;\n      this.ws.onclose = event.onClose;\n      this.ws.onmessage = event.onMessage;\n      this.ws.onerror = event.onError;\n    }\n  },\n  close: function close() {\n    this.needTip = false;\n    this.ws.close();\n  },\n  send: function send(data) {\n    if (_typeof(data) === 'object') {\n      data = _JSON$stringify(data);\n    }\n\n    this.ws.send(data);\n  }\n};\nvar event = {\n  onOpen: function onOpen() {\n    if (store.state.token) {\n      ws.send({\n        action: 'login',\n        type: 1,\n        token: store.state.token.token\n      });\n    }\n\n    if (ws.retry > 0) {\n      ws.retry = 0;\n      console.info('%c重连成功', 'color: green');\n    } // 发送心跳，保持连接\n\n\n    ws.si = setInterval(function () {\n      ws.send({\n        heartbeat: true\n      });\n    }, 50000);\n  },\n  onClose: function onClose() {\n    if (ws.needTip === true) {\n      if (ws.retry >= 10) {\n        _MessageBox.alert(i18n.t('ws.server_errmsg'), i18n.t('ws.server_error'), {\n          confirmButtonText: i18n.t('base.reload'),\n          type: 'error',\n          showClose: false,\n          closeOnHashChange: false,\n          callback: function callback() {\n            global.location.reload();\n          }\n        });\n      } else {\n        console.log(\"3\\u79D2\\u540E\\u8FDB\\u884C\\u7B2C\".concat(++ws.retry, \"\\u6B21\\u91CD\\u8FDE\"));\n        setTimeout(function () {\n          ws.init(true);\n        }, 3000);\n      }\n    } else {\n      ws.ws = null;\n    }\n\n    clearInterval(ws.si);\n  },\n  onMessage: function onMessage(_ref) {\n    var data = _ref.data;\n    var res = JSON.parse(data);\n\n    if (res.hasOwnProperty('action')) {\n      // 汇率数据\n      if (res.action === 'forexdata') {\n        if (!res.forex || !res.forex.time) {\n          store.commit('setSleep', true);\n        } else {\n          store.commit('saveForex', res.forex);\n          store.commit('saveScenes', res.scenes);\n          store.commit('saveTime', res.now);\n          store.commit('setSleep', false);\n        }\n      } // 新消息提醒\n\n\n      if (res.action === 'newchat') {\n        _MessageBox.alert(i18n.t('chat.content'), i18n.t('chat.title'), {\n          type: 'warning',\n          confirmButtonText: i18n.t('chat.btn'),\n          showClose: false\n        }).then(function (a) {\n          if (a === 'confirm') {\n            router.push(\"/chat?t=\".concat(new Date().getTime()));\n          }\n        });\n      }\n    }\n  },\n  onError: function onError() {\n    console.error('WS Error');\n  }\n};\nexport default ws;",{"version":3,"sources":["/www/web/src/ws.js"],"names":["store","i18n","router","ws","needTip","host","process","env","VUE_APP_WS_HOST","si","retry","init","r","WebSocket","onopen","event","onOpen","onclose","onClose","onmessage","onMessage","onerror","onError","close","send","data","state","token","action","type","console","info","setInterval","heartbeat","alert","t","confirmButtonText","showClose","closeOnHashChange","callback","global","location","reload","log","setTimeout","clearInterval","res","JSON","parse","hasOwnProperty","forex","time","commit","scenes","now","then","a","push","Date","getTime","error"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAMC,EAAE,GAAG;AACTA,EAAAA,EAAE,EAAE,IADK;AAETC,EAAAA,OAAO,EAAE,KAFA;AAGTC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,eAHT;AAITC,EAAAA,EAAE,EAAE,IAJK;AAKTC,EAAAA,KAAK,EAAE,CALE;AAMTC,EAAAA,IANS,gBAMJC,CANI,EAMD;AACN,QAAI,KAAKT,EAAL,KAAY,IAAZ,IAAoBS,CAAxB,EAA2B;AACzB,WAAKR,OAAL,GAAe,IAAf;AACA,WAAKD,EAAL,GAAU,IAAIU,SAAJ,CAAc,KAAKR,IAAnB,CAAV;AACA,WAAKF,EAAL,CAAQW,MAAR,GAAiBC,KAAK,CAACC,MAAvB;AACA,WAAKb,EAAL,CAAQc,OAAR,GAAkBF,KAAK,CAACG,OAAxB;AACA,WAAKf,EAAL,CAAQgB,SAAR,GAAoBJ,KAAK,CAACK,SAA1B;AACA,WAAKjB,EAAL,CAAQkB,OAAR,GAAkBN,KAAK,CAACO,OAAxB;AACD;AACF,GAfQ;AAgBTC,EAAAA,KAhBS,mBAgBD;AACN,SAAKnB,OAAL,GAAe,KAAf;AACA,SAAKD,EAAL,CAAQoB,KAAR;AACD,GAnBQ;AAoBTC,EAAAA,IApBS,gBAoBJC,IApBI,EAoBE;AACT,QAAI,QAAOA,IAAP,MAAgB,QAApB,EAA8B;AAC5BA,MAAAA,IAAI,GAAG,gBAAeA,IAAf,CAAP;AACD;;AACD,SAAKtB,EAAL,CAAQqB,IAAR,CAAaC,IAAb;AACD;AAzBQ,CAAX;AA4BA,IAAMV,KAAK,GAAG;AACZC,EAAAA,MADY,oBACH;AACP,QAAIhB,KAAK,CAAC0B,KAAN,CAAYC,KAAhB,EAAuB;AACrBxB,MAAAA,EAAE,CAACqB,IAAH,CAAQ;AAACI,QAAAA,MAAM,EAAE,OAAT;AAAkBC,QAAAA,IAAI,EAAE,CAAxB;AAA2BF,QAAAA,KAAK,EAAE3B,KAAK,CAAC0B,KAAN,CAAYC,KAAZ,CAAkBA;AAApD,OAAR;AACD;;AACD,QAAIxB,EAAE,CAACO,KAAH,GAAW,CAAf,EAAkB;AAChBP,MAAAA,EAAE,CAACO,KAAH,GAAW,CAAX;AACAoB,MAAAA,OAAO,CAACC,IAAR,CAAa,QAAb,EAAuB,cAAvB;AACD,KAPM,CAQP;;;AACA5B,IAAAA,EAAE,CAACM,EAAH,GAAQuB,WAAW,CAAC,YAAM;AACxB7B,MAAAA,EAAE,CAACqB,IAAH,CAAQ;AAACS,QAAAA,SAAS,EAAE;AAAZ,OAAR;AACD,KAFkB,EAEhB,KAFgB,CAAnB;AAGD,GAbW;AAcZf,EAAAA,OAdY,qBAcF;AACR,QAAIf,EAAE,CAACC,OAAH,KAAe,IAAnB,EAAyB;AACvB,UAAID,EAAE,CAACO,KAAH,IAAY,EAAhB,EAAoB;AAClB,oBAAWwB,KAAX,CAAiBjC,IAAI,CAACkC,CAAL,CAAO,kBAAP,CAAjB,EAA6ClC,IAAI,CAACkC,CAAL,CAAO,iBAAP,CAA7C,EAAwE;AACtEC,UAAAA,iBAAiB,EAAEnC,IAAI,CAACkC,CAAL,CAAO,aAAP,CADmD;AAEtEN,UAAAA,IAAI,EAAE,OAFgE;AAGtEQ,UAAAA,SAAS,EAAE,KAH2D;AAItEC,UAAAA,iBAAiB,EAAE,KAJmD;AAKtEC,UAAAA,QAAQ,EAAE,oBAAM;AACdC,YAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AAPqE,SAAxE;AASD,OAVD,MAUO;AACLZ,QAAAA,OAAO,CAACa,GAAR,0CAAqB,EAAExC,EAAE,CAACO,KAA1B;AACAkC,QAAAA,UAAU,CAAC,YAAM;AACfzC,UAAAA,EAAE,CAACQ,IAAH,CAAQ,IAAR;AACD,SAFS,EAEP,IAFO,CAAV;AAGD;AACF,KAjBD,MAiBO;AACLR,MAAAA,EAAE,CAACA,EAAH,GAAQ,IAAR;AACD;;AAED0C,IAAAA,aAAa,CAAC1C,EAAE,CAACM,EAAJ,CAAb;AACD,GArCW;AAsCZW,EAAAA,SAtCY,2BAsCM;AAAA,QAAPK,IAAO,QAAPA,IAAO;AAChB,QAAIqB,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWvB,IAAX,CAAV;;AAEA,QAAIqB,GAAG,CAACG,cAAJ,CAAmB,QAAnB,CAAJ,EAAkC;AAChC;AACA,UAAIH,GAAG,CAAClB,MAAJ,KAAe,WAAnB,EAAgC;AAC9B,YAAI,CAACkB,GAAG,CAACI,KAAL,IAAc,CAACJ,GAAG,CAACI,KAAJ,CAAUC,IAA7B,EAAmC;AACjCnD,UAAAA,KAAK,CAACoD,MAAN,CAAa,UAAb,EAAyB,IAAzB;AACD,SAFD,MAEO;AACLpD,UAAAA,KAAK,CAACoD,MAAN,CAAa,WAAb,EAA0BN,GAAG,CAACI,KAA9B;AACAlD,UAAAA,KAAK,CAACoD,MAAN,CAAa,YAAb,EAA2BN,GAAG,CAACO,MAA/B;AACArD,UAAAA,KAAK,CAACoD,MAAN,CAAa,UAAb,EAAyBN,GAAG,CAACQ,GAA7B;AACAtD,UAAAA,KAAK,CAACoD,MAAN,CAAa,UAAb,EAAyB,KAAzB;AACD;AACF,OAX+B,CAahC;;;AACA,UAAIN,GAAG,CAAClB,MAAJ,KAAe,SAAnB,EAA8B;AAC5B,oBAAWM,KAAX,CAAiBjC,IAAI,CAACkC,CAAL,CAAO,cAAP,CAAjB,EAAyClC,IAAI,CAACkC,CAAL,CAAO,YAAP,CAAzC,EAA+D;AAC7DN,UAAAA,IAAI,EAAE,SADuD;AAE7DO,UAAAA,iBAAiB,EAAEnC,IAAI,CAACkC,CAAL,CAAO,UAAP,CAF0C;AAG7DE,UAAAA,SAAS,EAAE;AAHkD,SAA/D,EAIGkB,IAJH,CAIQ,UAAAC,CAAC,EAAI;AACX,cAAIA,CAAC,KAAK,SAAV,EAAqB;AACnBtD,YAAAA,MAAM,CAACuD,IAAP,mBAAuB,IAAIC,IAAJ,GAAWC,OAAX,EAAvB;AACD;AACF,SARD;AASD;AACF;AACF,GAnEW;AAoEZrC,EAAAA,OApEY,qBAoEF;AACRQ,IAAAA,OAAO,CAAC8B,KAAR,CAAc,UAAd;AACD;AAtEW,CAAd;AAyEA,eAAezD,EAAf","sourcesContent":["import store from './store'\nimport {MessageBox} from 'element-ui'\nimport i18n from './i18n'\nimport router from './router'\n\nconst ws = {\n  ws: null,\n  needTip: false,\n  host: process.env.VUE_APP_WS_HOST,\n  si: null,\n  retry: 0,\n  init(r) {\n    if (this.ws === null || r) {\n      this.needTip = true\n      this.ws = new WebSocket(this.host);\n      this.ws.onopen = event.onOpen\n      this.ws.onclose = event.onClose\n      this.ws.onmessage = event.onMessage\n      this.ws.onerror = event.onError\n    }\n  },\n  close() {\n    this.needTip = false\n    this.ws.close();\n  },\n  send(data) {\n    if (typeof data === 'object') {\n      data = JSON.stringify(data)\n    }\n    this.ws.send(data);\n  }\n}\n\nconst event = {\n  onOpen() {\n    if (store.state.token) {\n      ws.send({action: 'login', type: 1, token: store.state.token.token})\n    }\n    if (ws.retry > 0) {\n      ws.retry = 0\n      console.info('%c重连成功', 'color: green')\n    }\n    // 发送心跳，保持连接\n    ws.si = setInterval(() => {\n      ws.send({heartbeat: true})\n    }, 50000)\n  },\n  onClose() {\n    if (ws.needTip === true) {\n      if (ws.retry >= 10) {\n        MessageBox.alert(i18n.t('ws.server_errmsg'), i18n.t('ws.server_error'), {\n          confirmButtonText: i18n.t('base.reload'),\n          type: 'error',\n          showClose: false,\n          closeOnHashChange: false,\n          callback: () => {\n            global.location.reload()\n          }\n        })\n      } else {\n        console.log(`3秒后进行第${++ws.retry}次重连`)\n        setTimeout(() => {\n          ws.init(true)\n        }, 3000)\n      }\n    } else {\n      ws.ws = null\n    }\n\n    clearInterval(ws.si)\n  },\n  onMessage({data}) {\n    let res = JSON.parse(data);\n\n    if (res.hasOwnProperty('action')) {\n      // 汇率数据\n      if (res.action === 'forexdata') {\n        if (!res.forex || !res.forex.time) {\n          store.commit('setSleep', true)\n        } else {\n          store.commit('saveForex', res.forex)\n          store.commit('saveScenes', res.scenes)\n          store.commit('saveTime', res.now)\n          store.commit('setSleep', false)\n        }\n      }\n\n      // 新消息提醒\n      if (res.action === 'newchat') {\n        MessageBox.alert(i18n.t('chat.content'), i18n.t('chat.title'), {\n          type: 'warning',\n          confirmButtonText: i18n.t('chat.btn'),\n          showClose: false\n        }).then(a => {\n          if (a === 'confirm') {\n            router.push(`/chat?t=${new Date().getTime()}`)\n          }\n        })\n      }\n    }\n  },\n  onError() {\n    console.error('WS Error')\n  }\n}\n\nexport default ws"]}]}