{"remainingRequest":"/www/web/node_modules/thread-loader/dist/cjs.js!/www/web/node_modules/babel-loader/lib/index.js!/www/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/www/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/web/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/www/web/src/views/Login.vue","mtime":1560668899000},{"path":"/www/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/www/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/www/web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"/www/web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  name: 'login',\n  data: function data() {\n    return {\n      form: {\n        username: '',\n        password: '',\n        type: 3\n      },\n      rules: {\n        username: {\n          required: true,\n          message: this.$t('check.required', [this.$t('field.username')])\n        },\n        password: {\n          required: true,\n          message: this.$t('check.required', [this.$t('field.password')])\n        }\n      },\n      showReg: false,\n      check_username: false,\n      check_agent_name: false,\n      regForm: {\n        nickname: '',\n        username: '',\n        password: '',\n        password_confirmation: '',\n        tel: '',\n        bank_name: '',\n        bank_number: '',\n        agent_name: ''\n      },\n      regRules: {\n        nickname: {\n          required: true,\n          message: this.$t('check.required', [this.$t('field.nickname')])\n        },\n        username: {\n          required: true,\n          message: this.$t('check.required', [this.$t('field.username')])\n        },\n        password: {\n          required: true,\n          message: this.$t('check.required', [this.$t('field.password')])\n        },\n        password_confirmation: {\n          required: true,\n          message: this.$t('check.required', [this.$t('field.password_confirmation')])\n        },\n        tel: {\n          required: true,\n          message: this.$t('check.required', [this.$t('field.tel')])\n        },\n        bank_name: {\n          required: true,\n          message: this.$t('check.required', [this.$t('field.bank_name')])\n        },\n        bank_number: {\n          required: true,\n          message: this.$t('check.required', [this.$t('field.bank_number')])\n        },\n        agent_name: {\n          required: true,\n          message: this.$t('check.required', [this.$t('field.agent_name')])\n        }\n      },\n      allow: false\n    };\n  },\n  computed: mapState(['lang']),\n  methods: _objectSpread({}, mapActions(['login', 'register', 'selLang']), {\n    submitLang: function submitLang(lang) {\n      this.selLang(lang);\n      global.location.reload();\n    },\n    submit: function submit() {\n      var _this = this;\n\n      this.$refs.login.validate(function (r) {\n        if (r) {\n          _this.login(_this.form).then(function () {\n            _this.$router.push('/');\n          });\n        }\n      });\n    },\n    reg: function reg() {\n      var _this2 = this;\n\n      this.$refs.reg.validate(function (r) {\n        if (r) {\n          _this2.register(_this2.regForm).then(function () {\n            _this2.$router.push('/');\n          });\n        }\n      });\n    },\n    check: function check(key) {\n      var _this3 = this;\n\n      this.$api.get('/tokens/check', {\n        params: _defineProperty({}, key, this.regForm[key])\n      }).then(function (data) {\n        if (data && data.check) {\n          _this3[\"check_\".concat(key)] = true;\n        }\n      });\n    },\n    allows: function allows() {\n      var _this4 = this;\n\n      this.$api.get('/allow').then(function (data) {\n        if (data) {\n          _this4.allow = Boolean(data.allow_register);\n        }\n      });\n    }\n  }),\n  mounted: function mounted() {\n    this.allows();\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"login\">\n    <div class=\"form\">\n      <el-dropdown class=\"lang\" trigger=\"click\" placement=\"bottom\" @command=\"submitLang\">\n            <span class=\"lang-link\">\n              <template v-if=\"lang === 'ko_KR'\">\n                <em class=\"ko_KR\"></em>한국어\n              </template>\n              <template v-if=\"lang === 'zh_CN'\">\n                <em></em>中文\n              </template>\n              <i class=\"el-icon-caret-bottom el-icon--right\"></i>\n            </span>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item command=\"ko_KR\" v-show=\"lang !== 'ko_KR'\">한국어</el-dropdown-item>\n          <el-dropdown-item command=\"zh_CN\" v-show=\"lang !== 'zh_CN'\">中文</el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n      <div class=\"logo\"><img src=\"../assets/logo.jpg\" alt=\"\"></div>\n      <el-form ref=\"login\" :model=\"form\" :rules=\"rules\" @submit.native.prevent=\"submit\">\n        <el-form-item :label=\"$t('field.username')\" prop=\"username\">\n          <el-input v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('field.password')\" prop=\"password\">\n          <el-input v-model=\"form.password\" show-password></el-input>\n        </el-form-item>\n        <el-form-item align=\"right\">\n          <p v-t=\"'login.tip'\"></p>\n          <el-button type=\"text\" v-t=\"'base.reg'\" @click=\"showReg = true\" v-if=\"allow\"></el-button>\n          <el-button type=\"primary\" v-t=\"'base.login'\" native-type=\"submit\"></el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <el-dialog :title=\"$t('base.reg')\"  v-if=\"allow\" :visible.sync=\"showReg\" custom-class=\"dialog-500\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\" :show-close=\"false\">\n      <el-form label-width=\"80px\" ref=\"reg\" :model=\"regForm\" :rules=\"regRules\" @submit.native.prevent=\"reg\">\n        <el-form-item :label=\"$t('field.username')\" prop=\"username\">\n          <el-input v-model=\"regForm.username\" @change=\"check_username = false\">\n            <span slot=\"append\" v-if=\"check_username\" v-t=\"'login.successUser'\" class=\"success\"></span>\n            <el-button slot=\"append\" v-else v-t=\"'base.check'\" @click=\"check('username')\"></el-button>\n          </el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('field.password')\" prop=\"password\">\n          <el-input v-model=\"regForm.password\" show-password></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('field.password_confirmation')\" prop=\"password_confirmation\">\n          <el-input v-model=\"regForm.password_confirmation\" show-password></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('field.tel')\" prop=\"tel\">\n          <el-input v-model=\"regForm.tel\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('field.bank_name')\" prop=\"bank_name\">\n          <el-input v-model=\"regForm.bank_name\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('field.bank_number')\" prop=\"bank_number\">\n          <el-input v-model=\"regForm.bank_number\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('field.nickname')\" prop=\"nickname\">\n          <el-input v-model=\"regForm.nickname\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('field.agent_name')\" prop=\"agent_name\">\n          <el-input v-model=\"regForm.agent_name\" @change=\"check_agent_name = false\">\n            <span slot=\"append\" v-if=\"check_agent_name\" v-t=\"'login.successAgent'\" class=\"success\"></span>\n            <el-button slot=\"append\" v-else v-t=\"'base.check'\" @click=\"check('agent_name')\"></el-button>\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"showReg = false\" v-t=\"'base.btnNo'\"></el-button>\n        <el-button type=\"primary\" v-t=\"'base.btnYes'\" native-type=\"submit\" @click=\"reg\"></el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n  import {mapState,mapActions} from 'vuex'\n\n  export default {\n    name: 'login',\n    data() {\n      return {\n        form: {\n          username: '',\n          password: '',\n          type: 3\n        },\n        rules: {\n          username: {required: true, message: this.$t('check.required', [this.$t('field.username')])},\n          password: {required: true, message: this.$t('check.required', [this.$t('field.password')])}\n        },\n        showReg: false,\n        check_username: false,\n        check_agent_name: false,\n        regForm: {\n          nickname: '',\n          username: '',\n          password: '',\n          password_confirmation: '',\n          tel: '',\n          bank_name: '',\n          bank_number: '',\n          agent_name: ''\n        },\n        regRules: {\n          nickname: {required: true, message: this.$t('check.required', [this.$t('field.nickname')])},\n          username: {required: true, message: this.$t('check.required', [this.$t('field.username')])},\n          password: {required: true, message: this.$t('check.required', [this.$t('field.password')])},\n          password_confirmation: {required: true, message: this.$t('check.required', [this.$t('field.password_confirmation')])},\n          tel: {required: true, message: this.$t('check.required', [this.$t('field.tel')])},\n          bank_name: {required: true, message: this.$t('check.required', [this.$t('field.bank_name')])},\n          bank_number: {required: true, message: this.$t('check.required', [this.$t('field.bank_number')])},\n          agent_name: {required: true, message: this.$t('check.required', [this.$t('field.agent_name')])}\n        },\n        allow: false\n      }\n    },\n    computed: mapState(['lang']),\n    methods: {\n      ...mapActions([\n        'login',\n        'register',\n        'selLang'\n      ]),\n      submitLang(lang) {\n        this.selLang(lang)\n        global.location.reload()\n      },\n      submit() {\n        this.$refs.login.validate(r => {\n          if (r) {\n            this.login(this.form).then(() => {\n              this.$router.push('/')\n            })\n          }\n        })\n      },\n      reg() {\n        this.$refs.reg.validate(r => {\n          if (r) {\n            this.register(this.regForm).then(() => {\n              this.$router.push('/')\n            })\n          }\n        })\n      },\n      check(key) {\n        this.$api.get('/tokens/check', {params: {[key]: this.regForm[key]}}).then(data => {\n          if (data && data.check) {\n            this[`check_${key}`] = true\n          }\n        })\n      },\n      allows() {\n        this.$api.get('/allow').then(data => {\n          if (data) {\n            this.allow = Boolean(data.allow_register)\n          }\n        })\n      }\n    },\n    mounted() {\n      this.allows()\n    }\n  }\n</script>\n\n<style scoped lang=\"less\">\n  @import \"../assets/config\";\n\n  .login {\n    /*background: #000;*/\n\n    .form {\n      position: fixed;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      margin: auto;\n      width: 430px;\n      height: 500px;\n\n      .logo {\n        .tc;\n        clear: both;\n        height: 150px;\n        background: #eee;\n        line-height: 150px;\n        font-size: 46px;\n        margin-bottom: 16px;\n      }\n\n      p {\n        .fl;\n        font-size: 12px;\n        color: #333;\n      }\n    }\n    \n    .success {\n      color: #67C23A;\n    }\n  }\n  .lang {\n    border-radius: 4px;\n    cursor: pointer;\n    margin-bottom: 8px;\n    float: right;\n\n    &:hover {\n      .hover;\n    }\n\n    &-link {\n      display: block;\n      height: 20px;\n      line-height: 20px;\n      font-size: 12px;\n      /*color: #fff;*/\n      /*padding: 10px;*/\n\n      .el-icon-caret-bottom {\n        font-size: 12px;\n      }\n\n      em {\n        .fl;\n        width: 30px;\n        height: 20px;\n        background: url(\"../assets/lang.jpg\") no-repeat;\n        margin-right: 6px;\n\n        &.ko_KR {\n          background-position-y: -20px;\n        }\n      }\n    }\n  }\n\n</style>\n"],"sourceRoot":"src/views"}]}