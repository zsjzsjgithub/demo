{"remainingRequest":"/www/web/node_modules/thread-loader/dist/cjs.js!/www/web/node_modules/babel-loader/lib/index.js!/www/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/www/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/web/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/www/web/src/views/Home.vue","mtime":1560668899000},{"path":"/www/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/www/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _Object$assign from \"/www/web/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _objectSpread from \"/www/web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport scene from '../components/scene';\nimport { mapState } from 'vuex';\nimport kx from '../kx';\nexport default {\n  name: 'home',\n  components: {\n    scene: scene\n  },\n  data: function data() {\n    return {\n      showDeposit: false,\n      showWithdrawal: false,\n      depositAmount: 0,\n      withdrawalAmount: 0,\n      rate: {\n        1: 0,\n        2: 0,\n        3: 0\n      },\n      prices: [],\n      account: {},\n      orders: [],\n      rates: [],\n      values: {},\n      pops: []\n    };\n  },\n  watch: {\n    rates: {\n      handler: function handler(rates) {\n        var datas = [];\n        rates.forEach(function (_ref, index) {\n          var time = _ref.time,\n              open = _ref.open,\n              close = _ref.close,\n              low = _ref.low,\n              high = _ref.high;\n          var value = [time, open, close, low, high];\n\n          if (index === 0) {\n            datas.unshift({\n              value: value,\n              itemStyle: {\n                borderWidth: 2,\n                borderColor: '#FD4322',\n                borderColor0: '#2F97E5'\n              },\n              emphasis: {\n                itemStyle: {\n                  borderWidth: 2,\n                  borderColor: '#18B387',\n                  borderColor0: '#20323E'\n                }\n              }\n            });\n          } else {\n            datas.unshift(value);\n          }\n        });\n        kx.setData(datas);\n      },\n      deep: true\n    },\n    forex: {\n      handler: function handler(data) {\n        var _this = this;\n\n        if (this.rates.length === 0 || !data.time) {\n          return;\n        }\n\n        var same = this.rates.some(function (rate, index) {\n          if (data.time === rate.time) {\n            _this.$set(_this.rates, index, data);\n\n            return true;\n          }\n        });\n\n        if (!same) {\n          this.getData();\n        }\n      },\n      deep: true\n    }\n  },\n  computed: _objectSpread({}, mapState(['forex', 'scenes', 'sleep', 'member'])),\n  methods: {\n    getData: function getData() {\n      var _this2 = this;\n\n      this.$api.get('/trades').then(function (data) {\n        if (data) {\n          if (_this2.forex.time !== '') {\n            data.rates.unshift(_this2.forex);\n          }\n\n          _this2.rates = data.rates;\n          _this2.rate = data.config.rate;\n          _this2.orders = data.orders;\n          _this2.account = data.account;\n\n          if (_this2.prices.slice().sort().toString() !== data.config.prices.slice().sort().toString()) {\n            _this2.prices = data.config.prices;\n          }\n\n          _this2.values = data.values; // 更新账号余额\n\n          if (_this2.member && _this2.member.balance !== data.account.balance) {\n            var member = _Object$assign({}, _this2.member);\n\n            member.balance = data.account.balance;\n\n            _this2.$store.commit('saveMember', member);\n          }\n\n          if (data.notifies.length > 0) {\n            data.notifies.forEach(function (n) {\n              if (Number(n.status) === 2) {\n                _this2.$notify({\n                  title: _this2.$t('trade.win'),\n                  type: 'success',\n                  message: _this2.$t('trade.win_cont', [n.sn, n.amount]),\n                  duration: 0\n                });\n              } else {\n                _this2.$notify({\n                  title: _this2.$t('trade.lose'),\n                  type: 'error',\n                  message: _this2.$t('trade.lose_cont', [n.sn]),\n                  duration: 0\n                });\n              }\n            });\n          }\n        }\n      });\n    },\n    deposit: function deposit() {\n      var _this3 = this;\n\n      this.$api.post('/accounts/deposit', {\n        amount: this.depositAmount\n      }).then(function (data) {\n        if (data) {\n          _this3.showDeposit = false;\n\n          _this3.$message.success(_this3.$t('base.success'));\n        }\n      });\n    },\n    withdrawal: function withdrawal() {\n      var _this4 = this;\n\n      this.$api.post('/accounts/withdrawal', {\n        amount: this.withdrawalAmount\n      }).then(function (data) {\n        if (data) {\n          _this4.getData();\n\n          _this4.showWithdrawal = false;\n\n          _this4.$message.success(_this4.$t('base.success'));\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    kx.init(this.$refs.kxt);\n    this.getData();\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"sleep\" v-show=\"sleep\">\n      <h1 v-t=\"'trade.sleep'\"></h1>\n      <div class=\"account\">\n        <div class=\"tt\" v-t=\"'trade.account'\"></div>\n        <div class=\"balance\">{{account.balance|numFormat}}</div>\n        <div class=\"btn\">\n          <button class=\"d\" @click=\"showDeposit = true\" v-t=\"'trade.deposit'\"></button>\n          <button @click=\"showWithdrawal = true\" v-t=\"'trade.withdrawal'\"></button>\n        </div>\n      </div>\n    </div>\n    <div class=\"right\">\n      <div class=\"account\">\n        <div class=\"tt\" v-t=\"'trade.account'\"></div>\n        <div class=\"balance\">{{account.balance|numFormat}}</div>\n        <div class=\"btn\">\n          <button class=\"d\" @click=\"showDeposit = true\" v-t=\"'trade.deposit'\"></button>\n          <button @click=\"showWithdrawal = true\" v-t=\"'trade.withdrawal'\"></button>\n        </div>\n      </div>\n      <transition-group name=\"list-complete\" tag=\"div\">\n        <scene\n            v-for=\"s in scenes\"\n            :key=\"s.timestamp\"\n            class=\"scene list-complete-item\"\n            :dt=\"s\"\n            :rate=\"rate\"\n            :prices=\"prices\"\n            :values=\"values[s.timestamp]\"\n            @trade=\"getData\"\n        ></scene>\n      </transition-group>\n    </div>\n    <div class=\"left\">\n      <div class=\"kx\" ref=\"kxt\"></div>\n      <div class=\"rate\">\n        <div class=\"tit\" v-t=\"'trade.fx'\"></div>\n        <p class=\"th\">\n          <span class=\"t\" v-t=\"'trade.time'\"></span>\n          <span v-t=\"'trade.open'\"></span>\n          <span v-t=\"'trade.high'\"></span>\n          <span v-t=\"'trade.low'\"></span>\n          <span v-t=\"'trade.close'\"></span>\n        </p>\n        <div class=\"td\">\n          <p v-for=\"r in rates\">\n            <span class=\"t\">{{r.time}}</span>\n            <span>{{r.open}}</span>\n            <span>{{r.high}}</span>\n            <span>{{r.low}}</span>\n            <span>{{r.close}}</span>\n          </p>\n        </div>\n      </div>\n      <div class=\"order\" v-if=\"orders.length > 0\">\n        <div class=\"tit\" v-t=\"'trade.jxz'\"></div>\n        <p class=\"th\">\n          <span class=\"t\" v-t=\"'trade.sn'\"></span>\n          <span class=\"m\" v-t=\"'trade.scene'\"></span>\n          <span class=\"r\" v-t=\"'trade.type'\"></span>\n          <span v-t=\"'trade.amount'\"></span>\n          <span class=\"r\" v-t=\"'trade.rate'\"></span>\n          <span v-t=\"'trade.shouyi'\"></span>\n          <span v-t=\"'trade.price'\"></span>\n        </p>\n        <p v-for=\"o in orders\">\n          <span class=\"t\">{{o.sn}}</span>\n          <span class=\"m s\">{{o.scene_time}}</span>\n          <span :class=\"`type_${o.type}`\" class=\"r\">{{o.type_label}}</span>\n          <span>{{o.amount}}</span>\n          <span class=\"r\">{{o.rate}}</span>\n          <span>{{o.amount * o.rate}}</span>\n          <span>{{o.open}}</span>\n        </p>\n      </div>\n    </div>\n    <el-dialog :title=\"$t('trade.deposit')\" :visible.sync=\"showDeposit\" custom-class=\"dialog-400\" @closed=\"depositAmount = 0\">\n      <el-form label-width=\"80px\">\n        <el-form-item :label=\"$t('trade.depositAmount')\">\n          <el-input v-model=\"depositAmount\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"showDeposit = false\" v-t=\"'base.btnNo'\"></el-button>\n        <el-button type=\"primary\" v-t=\"'base.btnYes'\" @click=\"deposit\"></el-button>\n      </div>\n    </el-dialog>\n    <el-dialog :title=\"$t('trade.withdrawal')\" :visible.sync=\"showWithdrawal\" custom-class=\"dialog-400\" @closed=\"withdrawalAmount = 0\">\n      <el-form label-width=\"80px\">\n        <el-form-item :label=\"$t('trade.withdrawalAmount')\">\n          <el-input v-model=\"withdrawalAmount\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"showWithdrawal = false\" v-t=\"'base.btnNo'\"></el-button>\n        <el-button type=\"primary\" v-t=\"'base.btnYes'\" @click=\"withdrawal\"></el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n  import scene from '../components/scene'\n  import {mapState} from 'vuex'\n  import kx from '../kx'\n\n  export default {\n    name: 'home',\n    components: {scene},\n    data() {\n      return {\n        showDeposit: false,\n        showWithdrawal: false,\n        depositAmount: 0,\n        withdrawalAmount: 0,\n        rate: {\n          1: 0,\n          2: 0,\n          3: 0\n        },\n        prices: [],\n        account: {},\n        orders: [],\n        rates: [],\n        values: {},\n        pops: []\n      }\n    },\n    watch: {\n      rates: {\n        handler(rates) {\n          let datas = []\n          rates.forEach(({time, open, close, low, high}, index) => {\n            let value = [time, open, close, low, high]\n            if (index === 0) {\n              datas.unshift({\n                value,\n                itemStyle: {\n                  borderWidth: 2,\n                  borderColor: '#FD4322',\n                  borderColor0: '#2F97E5'\n                },\n                emphasis: {\n                  itemStyle: {\n                    borderWidth: 2,\n                    borderColor: '#18B387',\n                    borderColor0: '#20323E'\n                  },\n                }\n              })\n            } else {\n              datas.unshift(value)\n            }\n          })\n          kx.setData(datas)\n        },\n        deep: true\n      },\n      forex: {\n        handler(data) {\n          if (this.rates.length === 0 || !data.time) {\n            return\n          }\n          let same = this.rates.some((rate, index) => {\n            if (data.time === rate.time) {\n              this.$set(this.rates, index, data)\n              return true\n            }\n          })\n\n          if (!same) {\n            this.getData()\n          }\n        },\n        deep: true\n      }\n    },\n    computed: {\n      ...mapState([\n        'forex',\n        'scenes',\n        'sleep',\n        'member'\n      ])\n    },\n    methods: {\n      getData() {\n        this.$api.get('/trades').then(data => {\n          if (data) {\n            if (this.forex.time !== '') {\n              data.rates.unshift(this.forex)\n            }\n            this.rates = data.rates\n            this.rate = data.config.rate\n            this.orders = data.orders\n            this.account = data.account\n\n            if (this.prices.slice().sort().toString() !== data.config.prices.slice().sort().toString()) {\n              this.prices = data.config.prices\n            }\n\n            this.values = data.values\n\n            // 更新账号余额\n            if (this.member && this.member.balance !== data.account.balance) {\n              let member = Object.assign({}, this.member)\n              member.balance = data.account.balance\n              this.$store.commit('saveMember', member)\n            }\n\n            if (data.notifies.length > 0) {\n              data.notifies.forEach(n => {\n                if (Number(n.status) === 2) {\n                  this.$notify({\n                    title: this.$t('trade.win'),\n                    type: 'success',\n                    message: this.$t('trade.win_cont', [n.sn, n.amount]),\n                    duration: 0\n                  })\n                } else {\n                  this.$notify({\n                    title: this.$t('trade.lose'),\n                    type: 'error',\n                    message: this.$t('trade.lose_cont', [n.sn]),\n                    duration: 0\n                  })\n                }\n              })\n            }\n          }\n        })\n      },\n      deposit() {\n        this.$api.post('/accounts/deposit', {amount: this.depositAmount}).then(data => {\n          if (data) {\n            this.showDeposit = false\n            this.$message.success(this.$t('base.success'))\n          }\n        })\n      },\n      withdrawal() {\n        this.$api.post('/accounts/withdrawal', {amount: this.withdrawalAmount}).then(data => {\n          if (data) {\n            this.getData()\n            this.showWithdrawal = false\n            this.$message.success(this.$t('base.success'))\n          }\n        })\n      }\n    },\n    mounted() {\n      kx.init(this.$refs.kxt)\n      this.getData()\n    }\n  }\n</script>\n\n<style scoped lang=\"less\">\n  @import \"../assets/home\";\n\n  .list-complete-item {\n    transition: all 1s;\n    display: block;\n  }\n\n  .list-complete-enter {\n    opacity: 0;\n    transform: translateY(346px);\n  }\n\n  .list-complete-leave-to {\n    opacity: 0;\n    transform: translateX(588px);\n  }\n\n  .list-complete-leave-active {\n    position: absolute;\n  }\n\n  @media screen and (max-width: 1200px) {\n    .list-complete-item {\n      transition: none;\n    }\n  }\n</style>"],"sourceRoot":"src/views"}]}