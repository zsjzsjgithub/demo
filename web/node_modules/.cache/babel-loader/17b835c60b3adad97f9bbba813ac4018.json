{"remainingRequest":"/www/web/node_modules/thread-loader/dist/cjs.js!/www/web/node_modules/babel-loader/lib/index.js!/www/web/src/store.js","dependencies":[{"path":"/www/web/src/store.js","mtime":1560668899000},{"path":"/www/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/web/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/www/web/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.number.constructor\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport moment from 'moment';\nVue.use(Vuex); // 计算初始化场次\n\nfunction getInitScenes() {\n  var interval = 6;\n  var count = 3;\n  var now = moment().startOf('minute');\n  var before = now.clone().add({\n    m: 1\n  });\n  var time = now.clone().utcOffset('+09:00');\n  time.minutes(Math.floor(time.minutes() / interval) * interval);\n  var scenes = [];\n\n  for (var i = 0; i < count; i++) {\n    var sceneTime = time.clone(); // 判断状态\n\n    var status = 1;\n\n    if (sceneTime.isBefore(now) || sceneTime.isSame(now)) {\n      status = 3;\n    } else if (sceneTime.isBefore(before) || sceneTime.isSame(before)) {\n      status = 2;\n    }\n\n    scenes.push({\n      time: sceneTime.format('YYYY-MM-DD HH:mm:ss'),\n      timestamp: Number(sceneTime.format('X')),\n      status: status,\n      long: moment(sceneTime - moment()).format('m:ss'),\n      price: '',\n      type: 0\n    });\n    time.add({\n      m: interval\n    });\n  }\n\n  return scenes;\n}\n\nexport default new Vuex.Store({\n  state: {\n    token: null,\n    lang: '',\n    member: null,\n    forex: {\n      time: '',\n      open: '',\n      close: '',\n      high: '',\n      low: ''\n    },\n    sleep: false,\n    scenes: getInitScenes(),\n    time: ''\n  },\n  mutations: {\n    saveToken: function saveToken(state, token) {\n      state.token = token;\n    },\n    setLang: function setLang(state, lang) {\n      state.lang = lang;\n    },\n    saveMember: function saveMember(state, member) {\n      state.member = member;\n    },\n    saveForex: function saveForex(state, forex) {\n      state.forex = forex;\n    },\n    saveScenes: function saveScenes(state, scenes) {\n      state.scenes = scenes;\n    },\n    saveTime: function saveTime(state, time) {\n      state.time = time;\n    },\n    setSleep: function setSleep(state, sleep) {\n      state.sleep = sleep;\n    }\n  },\n  actions: {\n    login: function login(_ref, form) {\n      var commit = _ref.commit;\n      return Vue.api.post('/tokens', form).then(function (data) {\n        if (data) {\n          localStorage.JWT_FXHOS_TOKEN = _JSON$stringify(data);\n          commit('saveToken', data);\n        }\n      });\n    },\n    register: function register(_ref2, form) {\n      var commit = _ref2.commit;\n      return Vue.api.post('/tokens/register', form).then(function (data) {\n        if (data) {\n          localStorage.JWT_FXHOS_TOKEN = _JSON$stringify(data);\n          commit('saveToken', data);\n        }\n      });\n    },\n    getMemberInfo: function getMemberInfo(_ref3) {\n      var commit = _ref3.commit;\n      return Vue.api.get('/tokens/info').then(function (data) {\n        if (data) {\n          commit('saveMember', data);\n        }\n      });\n    },\n    logout: function logout(_ref4) {\n      var commit = _ref4.commit;\n      return Vue.api.delete('/tokens').then(function () {\n        commit('saveToken', null);\n        localStorage.removeItem('JWT_FXHOS_TOKEN');\n      });\n    },\n    selLang: function selLang(_ref5, lang) {\n      var commit = _ref5.commit;\n      localStorage.lang = lang;\n      commit('setLang', lang);\n    }\n  }\n});",{"version":3,"sources":["/www/web/src/store.js"],"names":["Vue","Vuex","moment","use","getInitScenes","interval","count","now","startOf","before","clone","add","m","time","utcOffset","minutes","Math","floor","scenes","i","sceneTime","status","isBefore","isSame","push","format","timestamp","Number","long","price","type","Store","state","token","lang","member","forex","open","close","high","low","sleep","mutations","saveToken","setLang","saveMember","saveForex","saveScenes","saveTime","setSleep","actions","login","form","commit","api","post","then","data","localStorage","JWT_FXHOS_TOKEN","register","getMemberInfo","get","logout","delete","removeItem","selLang"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport moment from 'moment'\n\nVue.use(Vuex)\n\n// 计算初始化场次\nfunction getInitScenes() {\n  const interval = 6;\n  const count = 3;\n\n  const now = moment().startOf('minute')\n  let before = now.clone().add({m: 1})\n  let time = now.clone().utcOffset('+09:00')\n  time.minutes(Math.floor(time.minutes() / interval) * interval)\n\n  let scenes = []\n  for (let i = 0; i < count; i++) {\n    let sceneTime = time.clone()\n\n    // 判断状态\n    let status = 1\n    if (sceneTime.isBefore(now) || sceneTime.isSame(now)) {\n      status = 3;\n    } else if (sceneTime.isBefore(before) || sceneTime.isSame(before)) {\n      status = 2;\n    }\n\n    scenes.push({\n      time: sceneTime.format('YYYY-MM-DD HH:mm:ss'),\n      timestamp: Number(sceneTime.format('X')),\n      status,\n      long: moment(sceneTime - moment()).format('m:ss'),\n      price: '',\n      type: 0\n    })\n    time.add({m: interval})\n  }\n\n  return scenes\n}\n\nexport default new Vuex.Store({\n  state: {\n    token: null,\n    lang: '',\n    member: null,\n    forex: {\n      time: '',\n      open: '',\n      close: '',\n      high: '',\n      low: ''\n    },\n    sleep: false,\n    scenes: getInitScenes(),\n    time: ''\n  },\n  mutations: {\n    saveToken(state, token) {\n      state.token = token\n    },\n    setLang(state, lang) {\n      state.lang = lang\n    },\n    saveMember(state, member) {\n      state.member = member\n    },\n    saveForex(state, forex) {\n      state.forex = forex\n    },\n    saveScenes(state, scenes) {\n      state.scenes = scenes\n    },\n    saveTime(state, time) {\n      state.time = time\n    },\n    setSleep(state, sleep) {\n      state.sleep = sleep\n    }\n  },\n  actions: {\n    login({commit}, form) {\n      return Vue.api.post('/tokens', form).then(data => {\n        if (data) {\n          localStorage.JWT_FXHOS_TOKEN = JSON.stringify(data)\n          commit('saveToken', data)\n        }\n      })\n    },\n    register({commit}, form) {\n      return Vue.api.post('/tokens/register', form).then(data => {\n        if (data) {\n          localStorage.JWT_FXHOS_TOKEN = JSON.stringify(data)\n          commit('saveToken', data)\n        }\n      })\n    },\n    getMemberInfo({commit}) {\n      return Vue.api.get('/tokens/info').then(data => {\n        if (data) {\n          commit('saveMember', data)\n        }\n      })\n    },\n    logout({commit}) {\n      return Vue.api.delete('/tokens').then(() => {\n        commit('saveToken', null)\n        localStorage.removeItem('JWT_FXHOS_TOKEN')\n      })\n    },\n    selLang({commit}, lang) {\n      localStorage.lang = lang\n      commit('setLang', lang)\n    }\n  },\n})\n"]}]}