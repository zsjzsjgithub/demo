{"remainingRequest":"/www/admin/node_modules/thread-loader/dist/cjs.js!/www/admin/node_modules/babel-loader/lib/index.js!/www/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/www/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/admin/src/views/Statistic.vue?vue&type=script&lang=js&","dependencies":[{"path":"/www/admin/src/views/Statistic.vue","mtime":1565340815000},{"path":"/www/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/www/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport _Object$assign from \"/www/admin/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport _objectSpread from \"/www/admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { agents } from '../datas';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'statistic',\n  data: function data() {\n    return {\n      list: [],\n      agents: [],\n      search: {\n        agent_id: '',\n        date: [moment().utcOffset(TZ).subtract(10, 'd').startOf('day').format(), moment().utcOffset(TZ).endOf('day').format()]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState(['isAdmin']), {\n    params: function params() {\n      var params = _Object$assign({}, this.search);\n\n      for (var p in params) {\n        if (!params[p]) {\n          delete params[p];\n        }\n      }\n\n      if (params.date) {\n        if (params.date.length === 2) {\n          if (typeof params.date[0] === 'string') {\n            params.date_start = params.date[0];\n            params.date_end = params.date[1];\n          } else {\n            params.date_start = params.date[0].format();\n            params.date_end = params.date[1].format();\n          }\n        }\n\n        delete params.date;\n      }\n\n      return params;\n    }\n  }),\n  methods: {\n    getData: function getData() {\n      var _this = this;\n\n      this.$api.get('/datas/statistics', {\n        params: this.params\n      }).then(function (data) {\n        if (data) {\n          _this.list = data;\n        }\n      });\n    },\n    spanMethod: function spanMethod(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          columnIndex = _ref.columnIndex;\n\n      if (row.type !== 'data') {\n        switch (columnIndex) {\n          case 0:\n            return [1, 3];\n\n          case 1:\n            return [0, 0];\n\n          case 2:\n            return [0, 0];\n        }\n      }\n    },\n    rowClass: function rowClass(_ref2) {\n      var row = _ref2.row;\n      return row.type;\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.getData();\n    agents().then(function (data) {\n      if (data) {\n        _this2.agents = data;\n      }\n    });\n  }\n};",{"version":3,"sources":["Statistic.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-form :inline=\"true\" size=\"mini\" class=\"search\" label-width=\"80px\">\n      <el-form-item :label=\"$t('menu_agent')\" v-if=\"isAdmin\">\n        <el-select v-model=\"search.agent_id\" filterable clearable>\n          <el-option\n              v-for=\"a in agents\"\n              :key=\"a.id\"\n              :label=\"`${a.nickname} (${a.username})`\"\n              :value=\"a.id\">\n          </el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item :label=\"$t('date')\">\n        <el-date-picker\n            v-model=\"search.date\"\n            type=\"daterange\"\n            :start-placeholder=\"$t('time_start')\"\n            :end-placeholder=\"$t('time_end')\">\n        </el-date-picker>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"getData\" v-t=\"'search'\"></el-button>\n      </el-form-item>\n    </el-form>\n    <el-table\n        :data=\"list\"\n        ref=\"table\"\n        border\n        size=\"mini\"\n        :span-method=\"spanMethod\"\n        :row-class-name=\"rowClass\"\n        row-key=\"id\">\n      <el-table-column :label=\"$t('date')\" width=\"90\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <b v-if=\"row.type !== 'data'\">{{row.date}}</b>\n          <span v-else>{{row.date}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('menu_agent')\" width=\"160\" align=\"center\">\n        <agent slot-scope=\"{row}\" :data=\"row.agent\"></agent>\n      </el-table-column>\n      <el-table-column :label=\"$t('commission_rate')\" width=\"70\" align=\"center\">\n        <span slot-scope=\"{row}\">{{row.agent ? row.agent.commission_rate + '%' : ''}}</span>\n      </el-table-column>\n      <el-table-column :label=\"$t('deposit_sum')\" align=\"center\">\n        <span slot-scope=\"{row}\">{{row.deposit|numFormat}}</span>\n      </el-table-column>\n      <el-table-column :label=\"$t('withdrawal_sum')\" align=\"center\">\n        <span slot-scope=\"{row}\">{{row.withdrawal|numFormat}}</span>\n      </el-table-column>\n      <el-table-column :label=\"$t('lr')\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span style=\"color: #67C23A;\" v-if=\"Number(row.profit) >= 0\">\n            {{row.profit|numFormat}}\n          </span>\n          <span style=\"color: #ff4949;\" v-else>{{row.profit|numFormat}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('sr')\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span style=\"color: #67C23A;\" v-if=\"Number(row.income) >= 0\">\n            {{row.income|numFormat}}\n          </span>\n          <span style=\"color: #ff4949;\" v-else>{{row.income|numFormat}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"login\" :label=\"$t('login_count')\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"deposit_count\" :label=\"$t('deposit_count')\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"withdrawal_count\" :label=\"$t('withdrawal_count')\" align=\"center\"></el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\n  import {agents} from '../datas';\n  import {mapState} from 'vuex'\n\n  export default {\n    name: 'statistic',\n    data() {\n      return {\n        list: [],\n        agents: [],\n        search: {\n          agent_id: '',\n          date: [\n            moment().utcOffset(TZ).subtract(10, 'd').startOf('day').format(),\n            moment().utcOffset(TZ).endOf('day').format()\n          ]\n        }\n      }\n    },\n    computed: {\n      ...mapState(['isAdmin']),\n      params() {\n        let params = Object.assign({}, this.search)\n\n        for (let p in params) {\n          if (!params[p]) {\n            delete params[p]\n          }\n        }\n\n        if (params.date) {\n          if (params.date.length === 2) {\n            if (typeof params.date[0] === 'string') {\n              params.date_start = params.date[0]\n              params.date_end = params.date[1]\n            } else {\n              params.date_start = params.date[0].format()\n              params.date_end = params.date[1].format()\n            }\n          }\n          delete params.date\n        }\n\n        return params\n      }\n    },\n    methods: {\n      getData() {\n        this.$api.get('/datas/statistics', {params: this.params}).then(data => {\n          if (data) {\n            this.list = data\n          }\n        })\n      },\n      spanMethod({row, column, columnIndex}) {\n        if (row.type !== 'data') {\n          switch (columnIndex) {\n            case 0:\n              return [1, 3]\n\n            case 1:\n              return [0, 0]\n\n            case 2:\n              return [0, 0]\n          }\n        }\n      },\n      rowClass({row}) {\n        return row.type\n      }\n    },\n    mounted() {\n      this.getData()\n      agents().then(data => {\n        if (data) {\n          this.agents = data\n        }\n      })\n    }\n  }\n</script>\n\n<style lang=\"less\">\n  .el-table .total {\n    background: #f7f7f7;\n    font-weight: bold;\n  }\n\n  .el-table .sum {\n    background: #f7f7f7;\n  }\n</style>"],"sourceRoot":"src/views"}]}