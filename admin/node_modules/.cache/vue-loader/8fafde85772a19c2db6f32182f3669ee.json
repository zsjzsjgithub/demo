{"remainingRequest":"/www/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/admin/src/views/Agent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/www/admin/src/views/Agent.vue","mtime":1565340815000},{"path":"/www/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/www/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'agent',\n  data() {\n    return {\n      isReady: false,\n      list: [],\n      search: {\n        name: '',\n        date: []\n      },\n      page: {\n        total: 0,\n        per_page: 10,\n        current: 1\n      },\n      show: {\n        update: false\n      },\n      form: {\n        id: '',\n        nickname: '',\n        username: '',\n        password: '',\n        tel: '',\n        commission_rate: ''\n      }\n    }\n  },\n  computed: {\n    params() {\n      let params = Object.assign({\n        per_page: this.page.per_page,\n        page: this.page.current\n      }, this.search)\n\n      for (let p in params) {\n        if (!params[p]) {\n          delete params[p]\n        }\n      }\n\n      if (params.date) {\n        if (params.date.length === 2) {\n          params.date_start = params.date[0].format()\n          params.date_end = params.date[1].format()\n        }\n        delete params.date\n      }\n\n      return params\n    },\n    selIds() {\n      let ids = []\n      let sels = this.$refs.table.selection\n      if (sels && sels.length > 0) {\n        sels.forEach(s => {\n          ids.push(s.id)\n        })\n      }\n      return ids\n    },\n    hasSel() {\n      return this.isReady && this.selIds.length > 0\n    }\n  },\n  methods: {\n    getData(init) {\n      if (init === true) {\n        this.page.current = 1\n      }\n\n      this.$api.get('/agents', {params: this.params}).then(data => {\n        if (data) {\n          this.list = data.data\n          this.page.total = Number(data.total)\n        }\n      })\n    },\n    resetForm() {\n      this.form = Object.assign({}, this.$options.data().form)\n    },\n    del() {\n      this.$confirm(this.$t('agent_del_confirm'), this.$t('del'), {\n        confirmButtonText: this.$t('btnYes'),\n        cancelButtonText: this.$t('btnNo'),\n        type: 'warning'\n      }).then(() => {\n        this.$api.delete('/agents', {params: {ids: this.selIds}}).then(data => {\n          if (data) {\n            this.getData()\n            this.$message.success(this.$t('success'))\n          }\n        })\n      }).catch(() => {})\n    },\n    submit() {\n      if (this.form.id > 0) {\n        this.$api.put(`/agents/${this.form.id}`, this.form).then(data => {\n          if (data) {\n            this.show.update = false\n            this.getData(true)\n          }\n        })\n      } else {\n        this.$api.post('/agents', this.form).then(data => {\n          if (data) {\n            this.show.update = false\n            this.getData(true)\n          }\n        })\n      }\n    },\n    edit(row) {\n      let form = {}\n      for (let i in this.form) {\n        if (this.form.hasOwnProperty(i) && row.hasOwnProperty(i)) {\n          form[i] = row[i]\n        }\n      }\n      this.form = form\n      this.show.update = true\n    },\n    toggleEnable({id, is_enabled}) {\n      this.$api.patch(`/agents/${id}`, {is_enabled}).then(data => {\n        if (data) {\n          this.getData()\n        }\n      })\n    }\n  },\n  mounted() {\n    this.getData()\n    this.isReady = true\n  }\n}\n",{"version":3,"sources":["Agent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Agent.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <el-form :inline=\"true\" size=\"mini\" class=\"search\" label-width=\"80px\">\n      <el-form-item :label=\"`${$t('username')}|${$t('nickname')}`\">\n        <el-input v-model=\"search.name\" clearable></el-input>\n      </el-form-item>\n      <el-form-item :label=\"$t('time_login')\">\n        <el-date-picker\n            v-model=\"search.date\"\n            type=\"daterange\"\n            :start-placeholder=\"$t('time_start')\"\n            :end-placeholder=\"$t('time_end')\">\n        </el-date-picker>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"getData(true)\" v-t=\"'search'\"></el-button>\n      </el-form-item>\n    </el-form>\n    <div class=\"toolbar\">\n      <el-button-group>\n        <el-button type=\"success\" size=\"small\" @click=\"show.update = true\">+ {{$t('add')}}</el-button>\n        <el-button type=\"danger\" size=\"small\" @click=\"del\" :disabled=\"!hasSel\" v-t=\"'del'\"></el-button>\n      </el-button-group>\n    </div>\n    <el-table\n        :data=\"list\"\n        ref=\"table\"\n        border\n        stripe\n        size=\"mini\"\n        row-key=\"id\">\n      <el-table-column type=\"selection\"></el-table-column>\n      <el-table-column prop=\"id\" label=\"#\" min-width=\"60\"></el-table-column>\n      <el-table-column :label=\"$t('username')\">\n        <span class=\"a\" slot-scope=\"{row}\" @click=\"edit(row)\">{{row.username}}</span>\n      </el-table-column>\n      <el-table-column prop=\"nickname\" :label=\"$t('nickname')\"></el-table-column>\n      <el-table-column prop=\"members_count\" :label=\"$t('member_count')\"></el-table-column>\n      <el-table-column :label=\"$t('deposit_sum')\">\n        <span slot-scope=\"{row}\">{{row.deposit_sum|numFormat}}</span>\n      </el-table-column>\n      <el-table-column :label=\"$t('withdrawal_sum')\">\n        <span slot-scope=\"{row}\">{{row.withdrawal_sum|numFormat}}</span>\n      </el-table-column>\n      <el-table-column :label=\"$t('lr_sum')\">\n        <template slot-scope=\"{row}\">\n          <span style=\"color: #67C23A;\" v-if=\"Number(row.deposit_sum) - Number(row.withdrawal_sum) >= 0\">\n            {{Number(row.deposit_sum) - Number(row.withdrawal_sum)|numFormat}}\n          </span>\n          <span style=\"color: #ff4949;\" v-else>{{Number(row.deposit_sum) - Number(row.withdrawal_sum)|numFormat}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('commission_rate')\">\n        <span slot-scope=\"{row}\">{{row.commission_rate}}%</span>\n      </el-table-column>\n      <el-table-column :label=\"$t('sr_sum')\">\n        <template slot-scope=\"{row}\">\n          <span style=\"color: #67C23A;\" v-if=\"Number(row.deposit_sum) - Number(row.withdrawal_sum) >= 0\">\n            {{(Number(row.deposit_sum) - Number(row.withdrawal_sum)) * row.commission_rate / 100|numFormat}}\n          </span>\n          <span style=\"color: #ff4949;\" v-else>{{(Number(row.deposit_sum) - Number(row.withdrawal_sum)) * row.commission_rate / 100|numFormat}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"balance_sum\" :label=\"$t('balance_sum')\">\n        <span slot-scope=\"{row}\">{{row.balance_sum|numFormat}}</span>\n      </el-table-column>\n      <el-table-column prop=\"created_at\" :label=\"$t('time_join')\" min-width=\"140\"></el-table-column>\n      <el-table-column prop=\"logged_at\" :label=\"$t('time_login')\" min-width=\"140\"></el-table-column>\n      <el-table-column :label=\"$t('status')\" min-width=\"140\">\n        <template slot-scope=\"{row}\">\n          <el-switch\n              v-model=\"row.is_enabled\"\n              active-color=\"#13ce66\"\n              inactive-color=\"#ff4949\"\n              :active-text=\"$t('enable')\"\n              :inactive-text=\"$t('disable')\"\n              @change=\"toggleEnable(row)\">\n          </el-switch>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n        class=\"page\"\n        :total=\"page.total\"\n        :page-size.sync=\"page.per_page\"\n        :current-page.sync=\"page.current\"\n        layout=\"->,total,sizes,prev,pager,next,jumper\"\n        :page-sizes=\"[10,20,30,40,50,100,500]\"\n        @size-change=\"getData\"\n        @current-change=\"getData\"\n    ></el-pagination>\n    <el-dialog :title=\"!!form.id ? $t('edit') : $t('add')\" :visible.sync=\"show.update\" width=\"500px\" @closed=\"resetForm\">\n      <el-form label-width=\"80px\" @submit.native.prevent>\n        <el-form-item :label=\"$t('nickname')\">\n          <el-input v-model=\"form.nickname\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('username')\">\n          <el-input v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('password')\">\n          <el-input v-model=\"form.password\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('tel')\">\n          <el-input v-model=\"form.tel\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('commission_rate')\">\n          <el-input v-model=\"form.commission_rate\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"show.update = false\" v-t=\"'btnNo'\"></el-button>\n        <el-button type=\"primary\" v-t=\"'btnYes'\" @click=\"submit\"></el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'agent',\n    data() {\n      return {\n        isReady: false,\n        list: [],\n        search: {\n          name: '',\n          date: []\n        },\n        page: {\n          total: 0,\n          per_page: 10,\n          current: 1\n        },\n        show: {\n          update: false\n        },\n        form: {\n          id: '',\n          nickname: '',\n          username: '',\n          password: '',\n          tel: '',\n          commission_rate: ''\n        }\n      }\n    },\n    computed: {\n      params() {\n        let params = Object.assign({\n          per_page: this.page.per_page,\n          page: this.page.current\n        }, this.search)\n\n        for (let p in params) {\n          if (!params[p]) {\n            delete params[p]\n          }\n        }\n\n        if (params.date) {\n          if (params.date.length === 2) {\n            params.date_start = params.date[0].format()\n            params.date_end = params.date[1].format()\n          }\n          delete params.date\n        }\n\n        return params\n      },\n      selIds() {\n        let ids = []\n        let sels = this.$refs.table.selection\n        if (sels && sels.length > 0) {\n          sels.forEach(s => {\n            ids.push(s.id)\n          })\n        }\n        return ids\n      },\n      hasSel() {\n        return this.isReady && this.selIds.length > 0\n      }\n    },\n    methods: {\n      getData(init) {\n        if (init === true) {\n          this.page.current = 1\n        }\n\n        this.$api.get('/agents', {params: this.params}).then(data => {\n          if (data) {\n            this.list = data.data\n            this.page.total = Number(data.total)\n          }\n        })\n      },\n      resetForm() {\n        this.form = Object.assign({}, this.$options.data().form)\n      },\n      del() {\n        this.$confirm(this.$t('agent_del_confirm'), this.$t('del'), {\n          confirmButtonText: this.$t('btnYes'),\n          cancelButtonText: this.$t('btnNo'),\n          type: 'warning'\n        }).then(() => {\n          this.$api.delete('/agents', {params: {ids: this.selIds}}).then(data => {\n            if (data) {\n              this.getData()\n              this.$message.success(this.$t('success'))\n            }\n          })\n        }).catch(() => {})\n      },\n      submit() {\n        if (this.form.id > 0) {\n          this.$api.put(`/agents/${this.form.id}`, this.form).then(data => {\n            if (data) {\n              this.show.update = false\n              this.getData(true)\n            }\n          })\n        } else {\n          this.$api.post('/agents', this.form).then(data => {\n            if (data) {\n              this.show.update = false\n              this.getData(true)\n            }\n          })\n        }\n      },\n      edit(row) {\n        let form = {}\n        for (let i in this.form) {\n          if (this.form.hasOwnProperty(i) && row.hasOwnProperty(i)) {\n            form[i] = row[i]\n          }\n        }\n        this.form = form\n        this.show.update = true\n      },\n      toggleEnable({id, is_enabled}) {\n        this.$api.patch(`/agents/${id}`, {is_enabled}).then(data => {\n          if (data) {\n            this.getData()\n          }\n        })\n      }\n    },\n    mounted() {\n      this.getData()\n      this.isReady = true\n    }\n  }\n</script>\n\n"]}]}